1. Проблемные места
    Бизнес проблемы:
    - Недостаточное количество ресурсов на обсчёт цены модели (упущенные заказы)
    - Зависание MES (невозможность обработки заказа)
    - Где-то зависают заказы (проблемы с дебагом)
    - Невозможность следить realtime за проблемами сервисов (упущенные заказы)
    - Неустойчивость системы к условиям -1ДЦ (упущенные заказы)
    - Ручные релизы (сложность решения проблем, медленный time-to-market)
    - Судя по всему сложности с дебагингом системы (плохой клиентский опыт)
    Технические проблемы:
    - Невозможно динамически выделить ресурсы
    - Отсутствие observabilty системы (мониоринг/логирование/трассировка)
    - Отсутствие Api gateway для группы
    - Отсутвует service registry
    - Невозможность отключить критичные сервисы через Circut Breaker или подобные паттены
    - Нету тестового стенда или UAT окружения для тестирования\нагрузочного тестирования

2. Инициативы
    - Упростить динамическое выделение ресурсов
    - Добавить observabilty мониторинг\алёрты
    - Добавить ресурсов
    - Настроить CI\CD
    - Настроить логирование

3. Приоритет
    1. Добавить либо мониторинг либо логирование для точного понимания где сидит проблема
    2. Кажется, что первое что приносит проблемы это MES. Если можно подтвердить что это основной bottleneck, то можно приоритет повыше поднять. 
        Настроить возможность динамического расширения ресурсов от очереди на рассчёт. 
        Либо настроить простой механизм увеличения количества приложений, через docker+админки или любым другим образом, или обернуть всё в k8s.
        Если лицензия платится за ядро или установку посчитать что быстрее\выгоднее купить ядра или переработать код.
    3. Настроить observabilty всей остальной системой.
        Наличие мониторингов позволит быстро отслеживать за проблемными местами в системе. 
    4. Настроить сквозное логирование
       Без возможности удобным способом читать логи, есть шанс потерять данные и потерять знания о том как та или иная ошибка появилась, что замедлит разработку
    5. Настроить CI\CD
       Ускорение разработки, возможность обложить код тестами для устойчивости к изменениям
    6. Добавить больше instance''ов сервисов\баз для повышения устойчивости
       Судя по схеме система не устойчива к -1ДЦ, возможно хорошо было бы добавить ресурсов на это

Если можно было бы выбрать только 3, то это было бы observabilty\логи\k8s
Это позволило бы следить за системой, а так же в рельном времени реагировать на всплески активности клиентов.